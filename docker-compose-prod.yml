services:
  web:
    build:
      context: ./django-app/
    # command: python manage.py runserver 0.0.0.0:8000
    # command: gunicorn demo.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./django-app:/usr/scr/app/
      - static_files:/usr/src/app/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env/prod.env
    environment:
      - DJANGO_ENV=production
    depends_on:
      - db-prod
  nginx:
    build:
      context: ./nginx/
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - static_files:/home/app/staticfiles
    depends_on:
      - web

  db-prod:
    image: postgres:13
    env_file:
      - ./.env/prod.env
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  # dns:
  #   build:
  #     context: ./dns/
  #   restart: always
  #   ports:
  #     - 53:53
  #     - 53:53/udp
  #   volumes:
  #     - ./dns/named.conf:/etc/bind/named.conf
  #     - ./dns/zone/:/etc/bind/zone/
  #   command: named -c /etc/bind/named.conf -g -u named

volumes:
  static_files:
  postgres_data_prod:
